enclave {
  from "sgx_tstdc.edl" import *;
  from "sgx_pthread.edl" import *;
  from "sgx_tswitchless.edl" import *;

    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */
    
    from "TrustedLibrary/Libc.edl" import *;
    from "TrustedLibrary/Libcxx.edl" import ecall_exception, ecall_map;
    from "TrustedLibrary/Thread.edl" import *;
    
    trusted {
        public void callEnclave(
          [in, count=3]int *tableIds, int64_t n0, int64_t n1, int64_t N, int64_t M, int B);
    };

    untrusted {
        void ocall_print_string([in, string] const char *str);
        uint64_t ocall_measure_time();
        void OcallRead(
          int64_t index,
          [out, count=size]int *buffer,
          int size, 
          int tableId, int addrId);
        void OcallWrite(
          int64_t index, 
          [in, count=size]int *buffer,
          int size, 
          int tableId, int addrId);
        void OcallResize(int stableId, int64_t new_size, int addrId);
    };

};
